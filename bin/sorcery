#!/usr/bin/env node

import fs from 'node:fs';
import path from 'node:path';
import minimist from 'minimist';
import glob from 'tiny-glob/sync.js';
import showHelp from './showHelp.js';
import * as sorcery from '../src/index.js';

var command;

var validExtensions = { js: true };

command = minimist(process.argv.slice(2), {
	alias: {
		i: 'input',
		o: 'output',
		v: 'version',
		h: 'help',
		d: 'datauri',
		x: 'excludeContent'
	}
});

if (command.help) {
	showHelp(process.stdout);
} else if (process.argv.length <= 2 && process.stdin.isTTY) {
	showHelp(process.stderr);
} else if (command.version) {
	console.log('Sorcery version ' + require('../package.json').version);
} else if (!command.input) {
	console.error(
		'Error: You must supply an --input (-i) argument. Type sorcery --help for more info'
	);
} else {
	const stats = fs.statSync(command.input);

	if (stats.isDirectory()) {
		const files = glob('**', { cwd: command.input, filesOnly: true }).filter(
			function (file) {
				return validExtensions[path.extname(file).slice(1)];
			}
		);

		for (const file of files) {
			var input = path.join(command.input, file);
			var output = path.join(command.output || command.input, file);

			var chain = await sorcery.load(input);

			await chain.write(output, {
				inline: command.datauri,
				includeContent: !command.excludeContent
			});
		}
	} else {
		const chain = await sorcery.load(command.input);

		await chain.write(command.output || command.input, {
			inline: command.datauri,
			includeContent: !command.excludeContent
		});
	}
}
